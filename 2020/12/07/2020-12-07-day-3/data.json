{"title":"Day 3 面向对象进阶","date":"2020-12-07T14:59:08.000Z","source":"_posts/2020-12-07-day-3.md","raw":"---\ntitle: Day 3 面向对象进阶\ntags:\n  - 100 days of code\ndate: 2020-12-07 23:59:08\n---\n\n3/100\n\n## __slots__\n\nPython是动态语言，我们可以随时为对象绑定新的属性和方法。但是如果我们想限制类型的对象所能绑定的属性，则需要用到`__slots__`。\n\n```python\nclass Person(object):\n\n    __slots__ = ('_name', '_age', '_gender')\n\n    def __init__(self, name, age):\n        self._name = name\n        self._age = age\n\n    @property\n    def name(self):\n        return self._name\n\n    @property\n    def age(self):\n        return self._age\n\n    @age.setter\n    def age(self, age):\n        self._age = age\n\n    def play(self):\n        if self._age <= 16:\n            print('play game')\n        else:\n            print('work')\n\n\ndef main():\n    person = Person('Alice', 20)\n    person.play()\n    person._gender = 'male'\n    # Error\n    # person._family = True\n\nif __name__ == '__main__':\n    main()\n```\n\n\n## 特殊方法\n1. 静态方法使用 `@staticmethod` 修饰\n2. 类方法使用 `@classmethod` 来修饰, 类方法的第一个参数必须是`cls`，表示当前类的对象\n\n","slug":"2020-12-07-day-3","published":true,"updated":"2025-01-31T15:39:12.963Z","_id":"cm6m2r3wz001zzg9d4kamhuc8","comments":true,"layout":"post","photos":[],"html":"<p>3&#x2F;100</p>\n<h2 id=\"slots\"><a href=\"#slots\" class=\"headerlink\" title=\"slots\"></a><strong>slots</strong></h2><p>Python是动态语言，我们可以随时为对象绑定新的属性和方法。但是如果我们想限制类型的对象所能绑定的属性，则需要用到<code>__slots__</code>。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    __slots__ = (<span class=\"string\">&#x27;_name&#x27;</span>, <span class=\"string\">&#x27;_age&#x27;</span>, <span class=\"string\">&#x27;_gender&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name, age</span>):</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>._name = name</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>._age = age</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">name</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">self</span>._name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">age</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">self</span>._age</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @age.setter</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">age</span>(<span class=\"params\">self, age</span>):</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>._age = age</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">play</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>._age &lt;= <span class=\"number\">16</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;play game&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;work&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    person = Person(<span class=\"string\">&#x27;Alice&#x27;</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    person.play()</span><br><span class=\"line\">    person._gender = <span class=\"string\">&#x27;male&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\"># Error</span></span><br><span class=\"line\">    <span class=\"comment\"># person._family = True</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"特殊方法\"><a href=\"#特殊方法\" class=\"headerlink\" title=\"特殊方法\"></a>特殊方法</h2><ol>\n<li>静态方法使用 <code>@staticmethod</code> 修饰</li>\n<li>类方法使用 <code>@classmethod</code> 来修饰, 类方法的第一个参数必须是<code>cls</code>，表示当前类的对象</li>\n</ol>\n","excerpt":"","more":"<p>3&#x2F;100</p>\n<h2 id=\"slots\"><a href=\"#slots\" class=\"headerlink\" title=\"slots\"></a><strong>slots</strong></h2><p>Python是动态语言，我们可以随时为对象绑定新的属性和方法。但是如果我们想限制类型的对象所能绑定的属性，则需要用到<code>__slots__</code>。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    __slots__ = (<span class=\"string\">&#x27;_name&#x27;</span>, <span class=\"string\">&#x27;_age&#x27;</span>, <span class=\"string\">&#x27;_gender&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name, age</span>):</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>._name = name</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>._age = age</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">name</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">self</span>._name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @property</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">age</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">self</span>._age</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @age.setter</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">age</span>(<span class=\"params\">self, age</span>):</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>._age = age</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">play</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>._age &lt;= <span class=\"number\">16</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;play game&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;work&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    person = Person(<span class=\"string\">&#x27;Alice&#x27;</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">    person.play()</span><br><span class=\"line\">    person._gender = <span class=\"string\">&#x27;male&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\"># Error</span></span><br><span class=\"line\">    <span class=\"comment\"># person._family = True</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"特殊方法\"><a href=\"#特殊方法\" class=\"headerlink\" title=\"特殊方法\"></a>特殊方法</h2><ol>\n<li>静态方法使用 <code>@staticmethod</code> 修饰</li>\n<li>类方法使用 <code>@classmethod</code> 来修饰, 类方法的第一个参数必须是<code>cls</code>，表示当前类的对象</li>\n</ol>\n","path":"2020/12/07/2020-12-07-day-3/","permalink":"https://xsun4231.github.io/2020/12/07/2020-12-07-day-3/","tags":[{"name":"100 days of code","_id":"cm6m2r3x5003qzg9d3gua65ga","slug":"100-days-of-code","path":"tags/100-days-of-code/","permalink":"https://xsun4231.github.io/tags/100-days-of-code/","length":3}],"categories":[],"prev":{"title":"Servlet 基础","date":"2021-04-20T14:11:34.000Z","slug":"2021-04-20-servlet-1","published":true,"updated":"2025-01-31T15:39:12.963Z","_id":"cm6m2r3wz0021zg9d9p4n6va7","layout":"post","photos":[],"excerpt":"","path":"2021/04/20/2021-04-20-servlet-1/","permalink":"https://xsun4231.github.io/2021/04/20/2021-04-20-servlet-1/","__post":true},"next":{"title":"Day2 面向对象相关","date":"2020-12-07T06:50:24.000Z","slug":"2020-12-07-day-2","published":true,"updated":"2025-01-31T15:39:12.962Z","_id":"cm6m2r3wz001xzg9d3bi6aua8","layout":"post","photos":[],"excerpt":"","path":"2020/12/07/2020-12-07-day-2/","permalink":"https://xsun4231.github.io/2020/12/07/2020-12-07-day-2/","__post":true},"__post":true}