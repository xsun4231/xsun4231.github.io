{"title":"关于Enums的小问题","date":"2020-02-14T04:32:14.000Z","source":"_posts/2020-02-14-oracle-quiz-enums.md","raw":"---\ntitle: 关于Enums的小问题\ntags:\n  - Quiz Yourself\n  - Java\ndate: 2020-02-14 13:32:14\n---\n\n[原文链接](https://blogs.oracle.com/javamagazine/quiz-yourself-understanding-enums-advanced)\n\n首先给出以下Enum：\n```Java\nenum Size{\n  SMALL,\n  MEDIUM,\n  LARGE\n}\n```\n\n问下面的代码执行的结果是：\n```Java\npublic static void main(String[] args) {\n    final var size = Size.SMALL; //line n1\n    switch (size) { //line n2\n        case SMALL: {System.out.println(size);} //line n3\n    }\n}\n```\n\n1. n1处编译失败，初始化的写法错误\n2. n2处编译失败，没对应把所有Size包含在case内\n3. n3处编译失败，case后面应该是完整的`Size.SMALL`\n4. 输出 `SMALL`\n5. 输出 `Size@3cb5cdba`\n\n## 分析\n\n选项1是错的，局部变量可以使用final来修饰，从`Java 10`开始，可以使用关键字`var`来声明局部变量，声明的变量类型由初始化的类型决定。\n选项2也是错的，switch-case从来都不需要面对所有情况写case。\n选项3也是错的，当switch的判断条件是enum类型时，case里不需要写类名。\n选项4是对的，enum类型默认重写了`toString`方法，输出name的值。\n选项5是错的，上面说了，enum的toString输出的是name，而不是HashCode.\n\n","slug":"2020-02-14-oracle-quiz-enums","published":true,"updated":"2025-01-31T15:39:12.959Z","_id":"cm6m2r3wx001pzg9d29zi0749","comments":true,"layout":"post","photos":[],"html":"<p><a href=\"https://blogs.oracle.com/javamagazine/quiz-yourself-understanding-enums-advanced\">原文链接</a></p>\n<p>首先给出以下Enum：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">enum</span> <span class=\"title class_\">Size</span>&#123;</span><br><span class=\"line\">  SMALL,</span><br><span class=\"line\">  MEDIUM,</span><br><span class=\"line\">  LARGE</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>问下面的代码执行的结果是：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"type\">var</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> Size.SMALL; <span class=\"comment\">//line n1</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (size) &#123; <span class=\"comment\">//line n2</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> SMALL: &#123;System.out.println(size);&#125; <span class=\"comment\">//line n3</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>n1处编译失败，初始化的写法错误</li>\n<li>n2处编译失败，没对应把所有Size包含在case内</li>\n<li>n3处编译失败，case后面应该是完整的<code>Size.SMALL</code></li>\n<li>输出 <code>SMALL</code></li>\n<li>输出 <code>Size@3cb5cdba</code></li>\n</ol>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>选项1是错的，局部变量可以使用final来修饰，从<code>Java 10</code>开始，可以使用关键字<code>var</code>来声明局部变量，声明的变量类型由初始化的类型决定。<br>选项2也是错的，switch-case从来都不需要面对所有情况写case。<br>选项3也是错的，当switch的判断条件是enum类型时，case里不需要写类名。<br>选项4是对的，enum类型默认重写了<code>toString</code>方法，输出name的值。<br>选项5是错的，上面说了，enum的toString输出的是name，而不是HashCode.</p>\n","excerpt":"","more":"<p><a href=\"https://blogs.oracle.com/javamagazine/quiz-yourself-understanding-enums-advanced\">原文链接</a></p>\n<p>首先给出以下Enum：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">enum</span> <span class=\"title class_\">Size</span>&#123;</span><br><span class=\"line\">  SMALL,</span><br><span class=\"line\">  MEDIUM,</span><br><span class=\"line\">  LARGE</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>问下面的代码执行的结果是：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"type\">var</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> Size.SMALL; <span class=\"comment\">//line n1</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (size) &#123; <span class=\"comment\">//line n2</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> SMALL: &#123;System.out.println(size);&#125; <span class=\"comment\">//line n3</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>n1处编译失败，初始化的写法错误</li>\n<li>n2处编译失败，没对应把所有Size包含在case内</li>\n<li>n3处编译失败，case后面应该是完整的<code>Size.SMALL</code></li>\n<li>输出 <code>SMALL</code></li>\n<li>输出 <code>Size@3cb5cdba</code></li>\n</ol>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>选项1是错的，局部变量可以使用final来修饰，从<code>Java 10</code>开始，可以使用关键字<code>var</code>来声明局部变量，声明的变量类型由初始化的类型决定。<br>选项2也是错的，switch-case从来都不需要面对所有情况写case。<br>选项3也是错的，当switch的判断条件是enum类型时，case里不需要写类名。<br>选项4是对的，enum类型默认重写了<code>toString</code>方法，输出name的值。<br>选项5是错的，上面说了，enum的toString输出的是name，而不是HashCode.</p>\n","path":"2020/02/14/2020-02-14-oracle-quiz-enums/","permalink":"https://xsun4231.github.io/2020/02/14/2020-02-14-oracle-quiz-enums/","tags":[{"name":"Java","_id":"cm6m2r3wq000qzg9deq8b0ho7","slug":"Java","path":"tags/Java/","permalink":"https://xsun4231.github.io/tags/Java/","length":7},{"name":"Quiz Yourself","_id":"cm6m2r3x5003ozg9d7dw850ui","slug":"Quiz-Yourself","path":"tags/Quiz-Yourself/","permalink":"https://xsun4231.github.io/tags/Quiz-Yourself/","length":1}],"categories":[],"prev":{"title":"实用Optional时需要注意的二三事","date":"2020-08-31T00:20:42.000Z","slug":"2020-08-31-java-optional-best-practice","published":true,"updated":"2025-01-31T15:39:12.961Z","_id":"cm6m2r3wy001szg9dabdt7ydi","layout":"post","photos":[],"excerpt":"","path":"2020/08/31/2020-08-31-java-optional-best-practice/","permalink":"https://xsun4231.github.io/2020/08/31/2020-08-31-java-optional-best-practice/","__post":true},"next":{"title":"使用Java读写CSV文件","date":"2020-02-06T01:04:09.000Z","slug":"2020-02-06-java-io-csv","published":true,"updated":"2025-01-31T15:39:12.959Z","_id":"cm6m2r3ww001mzg9dgin6htus","layout":"post","photos":[],"excerpt":"","path":"2020/02/06/2020-02-06-java-io-csv/","permalink":"https://xsun4231.github.io/2020/02/06/2020-02-06-java-io-csv/","__post":true},"__post":true}