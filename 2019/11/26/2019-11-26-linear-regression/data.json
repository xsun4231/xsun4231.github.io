{"title":"使用Python的线性回归分析","date":"2019-11-26T02:32:56.000Z","source":"_posts/2019-11-26-linear-regression.md","raw":"---\ntitle: 使用Python的线性回归分析\ntags:\n  - Data Analysis\ndate: 2019-11-26 11:32:56\n---\n\n## 线性回归是啥？\n线性回归是统计学中的一种回归分析方法，我们可以简单的记住线性回归中有两个重要变量：\n1. The predictor(independent) variable 自变量 x\n2. the target(dependent) variable 因变量 y\n\n如果线性回归方程中只有一个x，则称为简单线性回归，大于一个x时，成为多元线性回归。\n举个例子\n```\ny = b0 + b1*x\n```\n这个简单线性回归方程中，x是自变量，y是因变量，b0是intercept, b1叫做slope\n\n## Python中的简单线性回归\n\n```Python\nfrom sklearn.linear_model import LinearRegression\n\nlm=LinearRegression()\n\n# 假设我们有一个dataframe df\nX = df[['highway-mpg']] #作为自变量 X可以指定多列\nY = df['Price'] #因变量Y只有一列\n\nlm.fit(X,Y) #使用线性回归分析\n\nYhat = lm.predict(X_0) # X_0 跟X又相同的列数\n\n# 可以查看线性回归方程的参数\nlm.intercept_\n\nlm.coef_\n\n```","slug":"2019-11-26-linear-regression","published":true,"updated":"2025-01-31T15:39:12.949Z","_id":"cm6m2r3wt0018zg9d6elxhfbl","comments":true,"layout":"post","photos":[],"html":"<h2 id=\"线性回归是啥？\"><a href=\"#线性回归是啥？\" class=\"headerlink\" title=\"线性回归是啥？\"></a>线性回归是啥？</h2><p>线性回归是统计学中的一种回归分析方法，我们可以简单的记住线性回归中有两个重要变量：</p>\n<ol>\n<li>The predictor(independent) variable 自变量 x</li>\n<li>the target(dependent) variable 因变量 y</li>\n</ol>\n<p>如果线性回归方程中只有一个x，则称为简单线性回归，大于一个x时，成为多元线性回归。<br>举个例子</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y = b0 + b1*x</span><br></pre></td></tr></table></figure>\n<p>这个简单线性回归方程中，x是自变量，y是因变量，b0是intercept, b1叫做slope</p>\n<h2 id=\"Python中的简单线性回归\"><a href=\"#Python中的简单线性回归\" class=\"headerlink\" title=\"Python中的简单线性回归\"></a>Python中的简单线性回归</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"></span><br><span class=\"line\">lm=LinearRegression()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假设我们有一个dataframe df</span></span><br><span class=\"line\">X = df[[<span class=\"string\">&#x27;highway-mpg&#x27;</span>]] <span class=\"comment\">#作为自变量 X可以指定多列</span></span><br><span class=\"line\">Y = df[<span class=\"string\">&#x27;Price&#x27;</span>] <span class=\"comment\">#因变量Y只有一列</span></span><br><span class=\"line\"></span><br><span class=\"line\">lm.fit(X,Y) <span class=\"comment\">#使用线性回归分析</span></span><br><span class=\"line\"></span><br><span class=\"line\">Yhat = lm.predict(X_0) <span class=\"comment\"># X_0 跟X又相同的列数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可以查看线性回归方程的参数</span></span><br><span class=\"line\">lm.intercept_</span><br><span class=\"line\"></span><br><span class=\"line\">lm.coef_</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h2 id=\"线性回归是啥？\"><a href=\"#线性回归是啥？\" class=\"headerlink\" title=\"线性回归是啥？\"></a>线性回归是啥？</h2><p>线性回归是统计学中的一种回归分析方法，我们可以简单的记住线性回归中有两个重要变量：</p>\n<ol>\n<li>The predictor(independent) variable 自变量 x</li>\n<li>the target(dependent) variable 因变量 y</li>\n</ol>\n<p>如果线性回归方程中只有一个x，则称为简单线性回归，大于一个x时，成为多元线性回归。<br>举个例子</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y = b0 + b1*x</span><br></pre></td></tr></table></figure>\n<p>这个简单线性回归方程中，x是自变量，y是因变量，b0是intercept, b1叫做slope</p>\n<h2 id=\"Python中的简单线性回归\"><a href=\"#Python中的简单线性回归\" class=\"headerlink\" title=\"Python中的简单线性回归\"></a>Python中的简单线性回归</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"></span><br><span class=\"line\">lm=LinearRegression()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假设我们有一个dataframe df</span></span><br><span class=\"line\">X = df[[<span class=\"string\">&#x27;highway-mpg&#x27;</span>]] <span class=\"comment\">#作为自变量 X可以指定多列</span></span><br><span class=\"line\">Y = df[<span class=\"string\">&#x27;Price&#x27;</span>] <span class=\"comment\">#因变量Y只有一列</span></span><br><span class=\"line\"></span><br><span class=\"line\">lm.fit(X,Y) <span class=\"comment\">#使用线性回归分析</span></span><br><span class=\"line\"></span><br><span class=\"line\">Yhat = lm.predict(X_0) <span class=\"comment\"># X_0 跟X又相同的列数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可以查看线性回归方程的参数</span></span><br><span class=\"line\">lm.intercept_</span><br><span class=\"line\"></span><br><span class=\"line\">lm.coef_</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","path":"2019/11/26/2019-11-26-linear-regression/","permalink":"https://xsun4231.github.io/2019/11/26/2019-11-26-linear-regression/","tags":[{"name":"Data Analysis","_id":"cm6m2r3x30032zg9d1s6facf9","slug":"Data-Analysis","path":"tags/Data-Analysis/","permalink":"https://xsun4231.github.io/tags/Data-Analysis/","length":1}],"categories":[],"prev":{"title":"均方误差和决定系数","date":"2019-11-28T05:00:58.000Z","slug":"2019-11-28-measures-for-in-sample-evaluation","published":true,"updated":"2025-01-31T15:39:12.949Z","_id":"cm6m2r3wt0019zg9df2jy4nv7","layout":"post","photos":[],"excerpt":"","path":"2019/11/28/2019-11-28-measures-for-in-sample-evaluation/","permalink":"https://xsun4231.github.io/2019/11/28/2019-11-28-measures-for-in-sample-evaluation/","__post":true},"next":{"title":"关于Java的stream执行顺序的笔记","date":"2019-11-20T04:39:55.000Z","slug":"2019-11-20-about-java-stream-lazy","published":true,"updated":"2025-01-31T15:39:12.949Z","_id":"cm6m2r3wt0016zg9d59xr4fwy","layout":"post","photos":[],"excerpt":"","path":"2019/11/20/2019-11-20-about-java-stream-lazy/","permalink":"https://xsun4231.github.io/2019/11/20/2019-11-20-about-java-stream-lazy/","__post":true},"__post":true}