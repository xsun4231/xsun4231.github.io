{"title":"使用DB2的Docker镜像建立本地开发用的数据库","date":"2019-07-23T05:36:40.000Z","source":"_posts/2019-07-23-docker-ibmdb2.md","raw":"---\ntitle: 使用DB2的Docker镜像建立本地开发用的数据库\ntags:\n  - Docker\n  - DB2\ndate: 2019-07-23 14:36:40\n---\n\n\n这个是2019-07-23的笔记，DB2的社区免费版授权和镜像的使用方法随时可能改变。\n\n## 从哪儿找DB2\n\nDB2的免费版本在 [2019年的社区版DB2](https://www.ibm.com/cloud/blog/announcements/ibm-db2-developer-community-edition) 中可以找到，提供了三种免费版的使用方法：\n\n1. 使用docker镜像\n2. 下载DB2程序\n3. IBM Cloud的DB2服务（免费套餐）\n\n这里记一下使用第一种方法Docker镜像的构建过程。\n\n## 开工\n\n### 第一步，打开冰箱....啊不，下载镜像，可以在docker hub搜DB2，这篇笔记使用的是 [ibmcom/db2](https://hub.docker.com/r/ibmcom/db2)\n\n### 第二步，创建容器，在控制台执行:\n\n```Docker\ndocker run --name db2 --privileged -p 50000:50000 -e LICENSE=accept -e DB2INST1_PASSWORD=password -e DBNAME=MYDATABASE ibmcom/db2\n```\n\n简单解释一下\n1. `--name` 容器的名字，以后启动关闭的时候用 \n2. `--privileged` 不知道（弄懂了再写）\n3. `-p` 端口映射，这里的意思是本地的50000端口映射到容器的50000，这样我们就可以通过`localhost:50000`来访问容器里的数据库了\n4. `-e` 给容器里设置一些环境变量\n   1. `LICENSE` 嗯。。。\n   2. `DB2INST1_PASSWORD` 为默认的用户名db2inst1设置的密码。\n   3. `DBNAME` 直接使用变量作为名字建立一个database\n5. 最后那个`ibmcom/db2`是镜像名\n\n\n### 第三步，连接：\n```\nurl: jdbc:db2://localhost:50000/MYDATABASE\nusername: db2inst1\npassword: password\ndriver: db2jcc4.jar \n```\n驱动文件可以在IBM的服务网页找到 [db2jcc4.jar](http://www-01.ibm.com/support/docview.wss?uid=swg21363866)\n\n## 结束\n有时候会提示port无法使用，容器不能启动。先确定port50000没有被占用，如果可以使用，就重启docker。\n\n","slug":"2019-07-23-docker-ibmdb2","published":true,"updated":"2025-01-31T15:39:12.845Z","_id":"cm6m2r3wr000xzg9ddz5y7e20","comments":true,"layout":"post","photos":[],"html":"<p>这个是2019-07-23的笔记，DB2的社区免费版授权和镜像的使用方法随时可能改变。</p>\n<h2 id=\"从哪儿找DB2\"><a href=\"#从哪儿找DB2\" class=\"headerlink\" title=\"从哪儿找DB2\"></a>从哪儿找DB2</h2><p>DB2的免费版本在 <a href=\"https://www.ibm.com/cloud/blog/announcements/ibm-db2-developer-community-edition\">2019年的社区版DB2</a> 中可以找到，提供了三种免费版的使用方法：</p>\n<ol>\n<li>使用docker镜像</li>\n<li>下载DB2程序</li>\n<li>IBM Cloud的DB2服务（免费套餐）</li>\n</ol>\n<p>这里记一下使用第一种方法Docker镜像的构建过程。</p>\n<h2 id=\"开工\"><a href=\"#开工\" class=\"headerlink\" title=\"开工\"></a>开工</h2><h3 id=\"第一步，打开冰箱…-啊不，下载镜像，可以在docker-hub搜DB2，这篇笔记使用的是-ibmcom-db2\"><a href=\"#第一步，打开冰箱…-啊不，下载镜像，可以在docker-hub搜DB2，这篇笔记使用的是-ibmcom-db2\" class=\"headerlink\" title=\"第一步，打开冰箱….啊不，下载镜像，可以在docker hub搜DB2，这篇笔记使用的是 ibmcom&#x2F;db2\"></a>第一步，打开冰箱….啊不，下载镜像，可以在docker hub搜DB2，这篇笔记使用的是 <a href=\"https://hub.docker.com/r/ibmcom/db2\">ibmcom&#x2F;db2</a></h3><h3 id=\"第二步，创建容器，在控制台执行\"><a href=\"#第二步，创建容器，在控制台执行\" class=\"headerlink\" title=\"第二步，创建容器，在控制台执行:\"></a>第二步，创建容器，在控制台执行:</h3><figure class=\"highlight docker\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"keyword\">run</span><span class=\"language-bash\"> --name db2 --privileged -p 50000:50000 -e LICENSE=accept -e DB2INST1_PASSWORD=password -e DBNAME=MYDATABASE ibmcom/db2</span></span><br></pre></td></tr></table></figure>\n\n<p>简单解释一下</p>\n<ol>\n<li><code>--name</code> 容器的名字，以后启动关闭的时候用 </li>\n<li><code>--privileged</code> 不知道（弄懂了再写）</li>\n<li><code>-p</code> 端口映射，这里的意思是本地的50000端口映射到容器的50000，这样我们就可以通过<code>localhost:50000</code>来访问容器里的数据库了</li>\n<li><code>-e</code> 给容器里设置一些环境变量<ol>\n<li><code>LICENSE</code> 嗯。。。</li>\n<li><code>DB2INST1_PASSWORD</code> 为默认的用户名db2inst1设置的密码。</li>\n<li><code>DBNAME</code> 直接使用变量作为名字建立一个database</li>\n</ol>\n</li>\n<li>最后那个<code>ibmcom/db2</code>是镜像名</li>\n</ol>\n<h3 id=\"第三步，连接：\"><a href=\"#第三步，连接：\" class=\"headerlink\" title=\"第三步，连接：\"></a>第三步，连接：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: jdbc:db2://localhost:50000/MYDATABASE</span><br><span class=\"line\">username: db2inst1</span><br><span class=\"line\">password: password</span><br><span class=\"line\">driver: db2jcc4.jar </span><br></pre></td></tr></table></figure>\n<p>驱动文件可以在IBM的服务网页找到 <a href=\"http://www-01.ibm.com/support/docview.wss?uid=swg21363866\">db2jcc4.jar</a></p>\n<h2 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h2><p>有时候会提示port无法使用，容器不能启动。先确定port50000没有被占用，如果可以使用，就重启docker。</p>\n","excerpt":"","more":"<p>这个是2019-07-23的笔记，DB2的社区免费版授权和镜像的使用方法随时可能改变。</p>\n<h2 id=\"从哪儿找DB2\"><a href=\"#从哪儿找DB2\" class=\"headerlink\" title=\"从哪儿找DB2\"></a>从哪儿找DB2</h2><p>DB2的免费版本在 <a href=\"https://www.ibm.com/cloud/blog/announcements/ibm-db2-developer-community-edition\">2019年的社区版DB2</a> 中可以找到，提供了三种免费版的使用方法：</p>\n<ol>\n<li>使用docker镜像</li>\n<li>下载DB2程序</li>\n<li>IBM Cloud的DB2服务（免费套餐）</li>\n</ol>\n<p>这里记一下使用第一种方法Docker镜像的构建过程。</p>\n<h2 id=\"开工\"><a href=\"#开工\" class=\"headerlink\" title=\"开工\"></a>开工</h2><h3 id=\"第一步，打开冰箱…-啊不，下载镜像，可以在docker-hub搜DB2，这篇笔记使用的是-ibmcom-db2\"><a href=\"#第一步，打开冰箱…-啊不，下载镜像，可以在docker-hub搜DB2，这篇笔记使用的是-ibmcom-db2\" class=\"headerlink\" title=\"第一步，打开冰箱….啊不，下载镜像，可以在docker hub搜DB2，这篇笔记使用的是 ibmcom&#x2F;db2\"></a>第一步，打开冰箱….啊不，下载镜像，可以在docker hub搜DB2，这篇笔记使用的是 <a href=\"https://hub.docker.com/r/ibmcom/db2\">ibmcom&#x2F;db2</a></h3><h3 id=\"第二步，创建容器，在控制台执行\"><a href=\"#第二步，创建容器，在控制台执行\" class=\"headerlink\" title=\"第二步，创建容器，在控制台执行:\"></a>第二步，创建容器，在控制台执行:</h3><figure class=\"highlight docker\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"keyword\">run</span><span class=\"language-bash\"> --name db2 --privileged -p 50000:50000 -e LICENSE=accept -e DB2INST1_PASSWORD=password -e DBNAME=MYDATABASE ibmcom/db2</span></span><br></pre></td></tr></table></figure>\n\n<p>简单解释一下</p>\n<ol>\n<li><code>--name</code> 容器的名字，以后启动关闭的时候用 </li>\n<li><code>--privileged</code> 不知道（弄懂了再写）</li>\n<li><code>-p</code> 端口映射，这里的意思是本地的50000端口映射到容器的50000，这样我们就可以通过<code>localhost:50000</code>来访问容器里的数据库了</li>\n<li><code>-e</code> 给容器里设置一些环境变量<ol>\n<li><code>LICENSE</code> 嗯。。。</li>\n<li><code>DB2INST1_PASSWORD</code> 为默认的用户名db2inst1设置的密码。</li>\n<li><code>DBNAME</code> 直接使用变量作为名字建立一个database</li>\n</ol>\n</li>\n<li>最后那个<code>ibmcom/db2</code>是镜像名</li>\n</ol>\n<h3 id=\"第三步，连接：\"><a href=\"#第三步，连接：\" class=\"headerlink\" title=\"第三步，连接：\"></a>第三步，连接：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: jdbc:db2://localhost:50000/MYDATABASE</span><br><span class=\"line\">username: db2inst1</span><br><span class=\"line\">password: password</span><br><span class=\"line\">driver: db2jcc4.jar </span><br></pre></td></tr></table></figure>\n<p>驱动文件可以在IBM的服务网页找到 <a href=\"http://www-01.ibm.com/support/docview.wss?uid=swg21363866\">db2jcc4.jar</a></p>\n<h2 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h2><p>有时候会提示port无法使用，容器不能启动。先确定port50000没有被占用，如果可以使用，就重启docker。</p>\n","path":"2019/07/23/2019-07-23-docker-ibmdb2/","permalink":"https://xsun4231.github.io/2019/07/23/2019-07-23-docker-ibmdb2/","tags":[{"name":"Docker","_id":"cm6m2r3x2002qzg9d3tnscwn4","slug":"Docker","path":"tags/Docker/","permalink":"https://xsun4231.github.io/tags/Docker/","length":1},{"name":"DB2","_id":"cm6m2r3x2002szg9dh2o3cg4p","slug":"DB2","path":"tags/DB2/","permalink":"https://xsun4231.github.io/tags/DB2/","length":1}],"categories":[],"prev":{"title":"Dockerfile 命令","date":"2019-07-30T01:29:30.000Z","slug":"2019-07-30-docker-instruction-commands","published":true,"updated":"2025-01-31T15:39:12.845Z","_id":"cm6m2r3wr000yzg9d988h005u","layout":"post","photos":[],"excerpt":"","path":"2019/07/30/2019-07-30-docker-instruction-commands/","permalink":"https://xsun4231.github.io/2019/07/30/2019-07-30-docker-instruction-commands/","__post":true},"next":{"title":"关于枚举型的一些理解","date":"2019-07-16T23:39:22.000Z","slug":"2019-07-17-enum-things","published":true,"updated":"2025-01-31T15:39:12.845Z","_id":"cm6m2r3wq000tzg9d0xk10ey7","layout":"post","photos":[],"excerpt":"","path":"2019/07/17/2019-07-17-enum-things/","permalink":"https://xsun4231.github.io/2019/07/17/2019-07-17-enum-things/","__post":true},"__post":true}