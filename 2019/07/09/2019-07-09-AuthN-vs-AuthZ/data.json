{"title":"区分 Authentication(AuthN) 和 Authorization(AuthZ)","date":"2019-07-09T02:48:48.000Z","source":"_posts/2019-07-09-AuthN-vs-AuthZ.md","raw":"---\ntitle: 区分 Authentication(AuthN) 和 Authorization(AuthZ)\ntags:\n  - null\ndate: 2019-07-09 11:48:48\n---\n\n\n最近写的一段代码里，关于关键字`Auth`的使用在review的时候被佐藤老师批评了，一直以来对于认证和授权都没有好好的理解，在这里整理一下。\n\n## 别直接用Auth来命名\n\n之前对于`Auth`这个关键字的理解，一直都处于大概知道什么意思的模糊状态。其实使用`Auth`作为关键字来命名方法和变量，并不是很合适，因为`Authentication` 和 `Authorization` 的缩写都可以是`Auth`。  \n\n`Authentication` 的中文翻译是`认证`，日语翻译是`認証`，可以理解为判断**你是不是谁**的操作，比如输入用户名和密码，系统判断这个用户名存在，且密码匹配，就是认证。\n\n`Authorization` 的中文翻译是`授权`，日语翻译是`認可`, 我的理解是**你可不可以**的意思，例如用户名密码通过认证之后，系统判断该用户是否有访问权限，给与权限的操作，就是授权。\n\n## 401 和 403\n\nHTTP的返回值401和403是一对很容易弄混的数字。\n\n * 401 Unauthorized\n * 403 Forbidden\n\n401是发生用户认证错误时的返回值，而403是拒绝访问。那么结合上面对`Authentication`和`Authorization`的理解不难发现:\n\n  * 401 虽然写着Unauthorized的名字，返回的却是Authentication的错误\n  * 403 则承担着返回Unauthorized错误的职责\n","slug":"2019-07-09-AuthN-vs-AuthZ","published":true,"updated":"2025-01-31T15:39:12.845Z","_id":"cm6m2r3wq000uzg9d1qul3ko2","comments":true,"layout":"post","photos":[],"html":"<p>最近写的一段代码里，关于关键字<code>Auth</code>的使用在review的时候被佐藤老师批评了，一直以来对于认证和授权都没有好好的理解，在这里整理一下。</p>\n<h2 id=\"别直接用Auth来命名\"><a href=\"#别直接用Auth来命名\" class=\"headerlink\" title=\"别直接用Auth来命名\"></a>别直接用Auth来命名</h2><p>之前对于<code>Auth</code>这个关键字的理解，一直都处于大概知道什么意思的模糊状态。其实使用<code>Auth</code>作为关键字来命名方法和变量，并不是很合适，因为<code>Authentication</code> 和 <code>Authorization</code> 的缩写都可以是<code>Auth</code>。  </p>\n<p><code>Authentication</code> 的中文翻译是<code>认证</code>，日语翻译是<code>認証</code>，可以理解为判断<strong>你是不是谁</strong>的操作，比如输入用户名和密码，系统判断这个用户名存在，且密码匹配，就是认证。</p>\n<p><code>Authorization</code> 的中文翻译是<code>授权</code>，日语翻译是<code>認可</code>, 我的理解是<strong>你可不可以</strong>的意思，例如用户名密码通过认证之后，系统判断该用户是否有访问权限，给与权限的操作，就是授权。</p>\n<h2 id=\"401-和-403\"><a href=\"#401-和-403\" class=\"headerlink\" title=\"401 和 403\"></a>401 和 403</h2><p>HTTP的返回值401和403是一对很容易弄混的数字。</p>\n<ul>\n<li>401 Unauthorized</li>\n<li>403 Forbidden</li>\n</ul>\n<p>401是发生用户认证错误时的返回值，而403是拒绝访问。那么结合上面对<code>Authentication</code>和<code>Authorization</code>的理解不难发现:</p>\n<ul>\n<li>401 虽然写着Unauthorized的名字，返回的却是Authentication的错误</li>\n<li>403 则承担着返回Unauthorized错误的职责</li>\n</ul>\n","excerpt":"","more":"<p>最近写的一段代码里，关于关键字<code>Auth</code>的使用在review的时候被佐藤老师批评了，一直以来对于认证和授权都没有好好的理解，在这里整理一下。</p>\n<h2 id=\"别直接用Auth来命名\"><a href=\"#别直接用Auth来命名\" class=\"headerlink\" title=\"别直接用Auth来命名\"></a>别直接用Auth来命名</h2><p>之前对于<code>Auth</code>这个关键字的理解，一直都处于大概知道什么意思的模糊状态。其实使用<code>Auth</code>作为关键字来命名方法和变量，并不是很合适，因为<code>Authentication</code> 和 <code>Authorization</code> 的缩写都可以是<code>Auth</code>。  </p>\n<p><code>Authentication</code> 的中文翻译是<code>认证</code>，日语翻译是<code>認証</code>，可以理解为判断<strong>你是不是谁</strong>的操作，比如输入用户名和密码，系统判断这个用户名存在，且密码匹配，就是认证。</p>\n<p><code>Authorization</code> 的中文翻译是<code>授权</code>，日语翻译是<code>認可</code>, 我的理解是<strong>你可不可以</strong>的意思，例如用户名密码通过认证之后，系统判断该用户是否有访问权限，给与权限的操作，就是授权。</p>\n<h2 id=\"401-和-403\"><a href=\"#401-和-403\" class=\"headerlink\" title=\"401 和 403\"></a>401 和 403</h2><p>HTTP的返回值401和403是一对很容易弄混的数字。</p>\n<ul>\n<li>401 Unauthorized</li>\n<li>403 Forbidden</li>\n</ul>\n<p>401是发生用户认证错误时的返回值，而403是拒绝访问。那么结合上面对<code>Authentication</code>和<code>Authorization</code>的理解不难发现:</p>\n<ul>\n<li>401 虽然写着Unauthorized的名字，返回的却是Authentication的错误</li>\n<li>403 则承担着返回Unauthorized错误的职责</li>\n</ul>\n","path":"2019/07/09/2019-07-09-AuthN-vs-AuthZ/","permalink":"https://xsun4231.github.io/2019/07/09/2019-07-09-AuthN-vs-AuthZ/","tags":[],"categories":[],"prev":{"title":"关于枚举型的一些理解","date":"2019-07-16T23:39:22.000Z","slug":"2019-07-17-enum-things","published":true,"updated":"2025-01-31T15:39:12.845Z","_id":"cm6m2r3wq000tzg9d0xk10ey7","layout":"post","photos":[],"excerpt":"","path":"2019/07/17/2019-07-17-enum-things/","permalink":"https://xsun4231.github.io/2019/07/17/2019-07-17-enum-things/","__post":true},"next":{"title":"代码重构 - 改善方法的结构","date":"2019-04-24T05:06:44.000Z","slug":"2019-04-24-refactoring-C6","published":true,"updated":"2025-01-31T15:39:12.841Z","_id":"cm6m2r3wq000rzg9d4v1p5wfx","layout":"post","photos":[],"excerpt":"","path":"2019/04/24/2019-04-24-refactoring-C6/","permalink":"https://xsun4231.github.io/2019/04/24/2019-04-24-refactoring-C6/","__post":true},"__post":true}